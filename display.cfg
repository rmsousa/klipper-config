#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.5 BLUE=0.25 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.25 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=0.25 GREEN=0 BLUE=0 INDEX=3 


#--------------------------------------------------------------------

### menu main ###
[menu __main]
type: list
name: Main

### menu octoprint ###
[menu __main __octoprint]
type: disabled


[menu __main __control __caselightwhite]
type: input
enable: {'neopixel case_lighting' in printer}
name: Lights: {menu.input}
input: {(printer["gcode_macro SET_CASE_LIGHT"].saved_red + printer["gcode_macro SET_CASE_LIGHT"].saved_green + printer["gcode_macro SET_CASE_LIGHT"].saved_blue) / 3}
input_min: 0
input_max: 1
input_step: 0.05
realtime: True
gcode:
    SET_CASE_LIGHT RED={menu.input} GREEN={menu.input} BLUE={menu.input}

### menu filament ###

[menu __main __filament __loadf]
type: command
name: Load Fil. fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E70 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __loads]
type: command
name: Load Fil. slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E70 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloadf]
type: command
name: Unload Fil.fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-70 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __filament __unloads]
type: command
name: Unload Fil.slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-70 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __main __shutdown]
type: command
name: Power off printer
gcode: POWER_OFF_PRINTER

[display_template _chamber]
text:
    ~chamber~
    # Show temperature
    { "%3.0f" % (printer["temperature_sensor chamber"].temperature) }
    ~degrees~

[display_data _default_16x4 chamber]
position: 2, 0
text: { render("_chamber") }

[display_data _default_16x4 print_progress]
position: 2, 6
text: { "{:^5.0%}".format(printer.display_status.progress) }

[display_data _default_16x4 progress_bar]
position: 3, 0 # Draw graphical progress bar after text is written
text: { draw_progress_bar(3, 0, 16, printer.display_status.progress) }

[display_glyph chamber]
data:
  ................
  ................
  ................
  ................
  .**************.
  .*............*.
  .*...*....*...*.
  .*..*....*....*.
  .*...*....*...*.
  .*....*....*..*.
  .*...*....*...*.
  .*..*....*....*.
  .*............*.
  .**************.
  ................
  ................