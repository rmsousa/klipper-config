# This macro was provided by discord user Garrettwp to whom i give my thanks for sharing it with me.
# I have tweaked it a lot.
#
# this macro is  based on the great Annex magprobe dockable probe macros "#Originally developed by Mental, modified for better use on K-series printers by RyanG and Trails"
# that macro can be found here https://github.com/Annex-Engineering/Annex-Engineering_Other_Printer_Mods/blob/master/All_Printers/Microswitch_Probe/Klipper_Macros/dockable_probe_macros.cfg
#
# by standing on the shoulders of giants, lets see if we can see further

[gcode_macro User_Variables]
variable_travel_speed:          200   # how fast all other travel moves will be performed when running these macros
variable_dock_speed:            50    # how fast should the toolhead move when docking the probe for the final movement
variable_release_speed:         100    # how fast should the toolhead move to release the hold of the magnets after docking
variable_z_drop_speed:          20    # how fast the z will lower when moving to the z location to clear the probe
variable_home_z_height:         15    # Z when homing

#dock location
variable_docklocation_x:        144    # X Dock position
variable_docklocation_y:        307   # Y Dock position
variable_dockarmslenght:        50    # Dock arms lenght, toolhead movement necessary to clear the dock arms

# Do not modify below
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}



[gcode_macro Probe_Variables]
variable_probe_attached:            False
variable_probe_state:               False
gcode:

# Attach Probe Routine
[gcode_macro Attach_Probe]
gcode:
    CheckProbe action=query
    # Get probe attach status
    {% set P = printer["gcode_macro Probe_Variables"].probe_attached %}
    # Get Docking location
    {% set Dx = printer["gcode_macro User_Variables"].docklocation_x %}
    {% set Dy = printer["gcode_macro User_Variables"].docklocation_y %}
    {% set Da = printer["gcode_macro User_Variables"].dockarmslenght %}
    # Safe Z for travel
    {% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
    #Set speed
    {% set St = printer["gcode_macro User_Variables"].travel_speed * 60    %}

    #prior to saving actual position, check if its necessary to move to a safe Z
    #that has enought overhead for the attached probe
    {% if (printer.toolhead.position.z < Hzh) %}
        G1 Z{Hzh} F1200
    {% endif %}
    M400 # mandatory to save the new safe position
    #allows the docking position to be independent of the Z offset, necessary for bed mounted probes
    SAVE_GCODE_STATE name=_attachProbe

    # if x and y are not homed
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home X Y Z Axis First!") }

    # If probe not attached and locked
    {% elif not P %}
        G90

        {% if (printer.toolhead.position.z < Hzh) %}
            G1 Z{Hzh} F1200
        {% endif %}

        # Probe entry location
        G1 X{Dx} Y{Dy|int - Da|int} Z{Hzh} F{St}
        # pickup from Probe location
        G1 X{Dx} Y{Dy} F1800
        # Probe entry location
        G1 X{Dx} Y{Dy|int - Da|int} F6000
        #Go to Z safe distance
        G1 Z{Hzh} F600
        CheckProbe action=attach
    {% else %}

        # Probe attached, do nothing
        CheckProbe action=query

    {% endif %}

    #reverts to the original Z offset
    RESTORE_GCODE_STATE name=_attachProbe MOVE=1 MOVE_SPEED={St}


# Dock Probe Routine
[gcode_macro Dock_Probe]
gcode:
    CheckProbe action=query
    # Get probe attach status
    {% set P = printer["gcode_macro Probe_Variables"].probe_attached %}
    # Get Docking location
    {% set Dx = printer["gcode_macro User_Variables"].docklocation_x %}
    {% set Dy = printer["gcode_macro User_Variables"].docklocation_y %}
    {% set Da = printer["gcode_macro User_Variables"].dockarmslenght %}
    # Safe Z for travel
    {% set Hzh = printer["gcode_macro User_Variables"].home_z_height|float %}
    # Set speed
    {% set St = printer["gcode_macro User_Variables"].travel_speed * 60    %}
    {% set Sd = printer["gcode_macro User_Variables"].dock_speed * 60    %}
    {% set Sr = printer["gcode_macro User_Variables"].release_speed * 60    %}
    {% set Sz = printer["gcode_macro User_Variables"].z_drop_speed * 60    %}

    M400 # mandatory to save the new safe position
    #allows the docking position to be independent of the Z offset, necessary for bed mounted probes
    SAVE_GCODE_STATE name=_dockProbe

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home X, Y and Z Axis First!") }

    # If probe not attached and not locked
    {% elif P %}
        G90

        {% if (printer.toolhead.position.z < Hzh) %}
            G1 Z{Hzh} F{Sz}
        {% endif %}

        # Probe entry location
        G1 X{Dx} Y{Dy|int - Da|int} Z{Hzh} F{St}
        # Drop Probe to Probe location
        G1 X{Dx} Y{Dy} F{Sd}
        # Probe decoupling
        G1 X{Dx|int + 40} Y{Dy} F{Sr}
        #Go to Z safe distance
        G1 X{Dx|int + 40} Y{Dy|int - 5} Z{Hzh} F{St}

        CheckProbe action=dock
    {% else %}
        # Probe docked, do nothing
        CheckProbe action=query
    {% endif %}
    #reverts to the original Z offset
    RESTORE_GCODE_STATE name=_dockProbe MOVE=1 MOVE_SPEED={St}


# Quad Gantry Level
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing:             _QUAD_GANTRY_LEVEL
gcode:
    Attach_Probe

    _QUAD_GANTRY_LEVEL {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
            endfor %}
    Dock_Probe

# Bed Mesh Calibrate
[gcode_macro BED_MESH_CALIBRATE]
rename_existing:             _BED_MESH_CALIBRATE
gcode:
    Attach_Probe
    _BED_MESH_CALIBRATE {% for p in params
           %}{'%s=%s ' % (p, params[p])}{%
          endfor %}
    Dock_Probe


# Probe Calibrate
[gcode_macro PROBE_CALIBRATE]
rename_existing:             _PROBE_CALIBRATE
gcode:
    Attach_Probe
    _PROBE_CALIBRATE {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}
    Dock_Probe

# Probe Accuracy
[gcode_macro PROBE_ACCURACY]
rename_existing:             _PROBE_ACCURACY
gcode:
    Attach_Probe
    _PROBE_ACCURACY {% for p in params
            %}{'%s=%s ' % (p, params[p])}{%
           endfor %}
    Dock_Probe

# check to see if probe is where it is supposed to be after
# attaching/docking maneuver and set homing error or shutdown
[gcode_macro CheckProbe]
variable_probe_state:           0
gcode:
    Query_Probe
    SetProbeState action={ ACTION }


# due to how templates are evaluated, we have query endstops in one
# macro and call another macro to make decisions based on the result
[gcode_macro SetProbeState]
gcode:
    {% set P = printer.probe.last_query %}

    # If triggered (true), probe not attached
    {% if P %}
        SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_attached VALUE={ False }

    # If not triggered (false), probe attached
    {% else %}
        SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_attached VALUE={ True }
    {% endif %}

    {% if params.ACTION == 'query' %}
          SET_GCODE_VARIABLE MACRO=Probe_Variables VARIABLE=probe_state VALUE={ P }
    {% endif %}

    # if probe fails to attach/detach
    # if not docked
    {% if (not P and params.ACTION == 'dock') %}
        { action_raise_error("Probe dock failed!") }
    {% endif %}

    # if not attached
    {% if P and params.ACTION == 'attach' %}
        { action_raise_error("Probe attach failed!") }
    {% endif %}

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:207.5,304.5
speed:100
z_hop:10

#####################################################################
#	Probe
#####################################################################

[probe]
pin: ^PA3
x_offset: 0
y_offset: 20.0
speed: 3.0
samples: 3
samples_result: median
sample_retract_dist: 2
samples_tolerance: 0.006
samples_tolerance_retries: 5

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 30,30
mesh_max: 270,270
zero_reference_position: 150, 150
fade_start: 1
fade_end: 10.0
probe_count: 9,9
algorithm: bicubic

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[quad_gantry_level]
##	Gantry Corners for 300mm Build
gantry_corners:
	-60, 5
	360,375
##	Probe points
points:
	50,30
	50,230
	250,230
	250,30

speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

#####################################################################
#	Macros
#####################################################################

[gcode_macro HOME_LEVEL]
gcode:
    G90
    BED_MESH_CLEAR
    # Initial home
    G28
    # Level gantry
    QUAD_GANTRY_LEVEL
    # Move near homing position at travel speed
    G0 X280 Y280 Z10 F6000
    # Home after gantry leveled
    G28


